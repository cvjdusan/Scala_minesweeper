[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\cvdus\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\cvdus\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (JetBrains s.r.o. Java 11.0.13)
[debug]       Load.loadUnit: plugins took 156.2598ms
[debug]       Load.loadUnit: defsScala took 0.414ms
[debug] [Loading] Scanning directory C:\Users\cvdus\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cvdus\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.965799 ms
[debug]           Load.resolveProject(global-plugins) took 61.675ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\cvdus\.sbt\1.0\plugins, plugins: List(<none>))) took 118.357899ms
[debug] [Loading] Done in C:\Users\cvdus\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 147.407ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.187801ms
[debug]     Load.loadUnit(file:/C:/Users/cvdus/.sbt/1.0/plugins/, ...) took 315.911301ms
[debug]   Load.apply: load took 549.1799ms
[debug]   Load.apply: resolveProjects took 7.914501ms
[debug]   Load.apply: finalTransforms took 80.0567ms
[debug]   Load.apply: config.delegates took 7.486901ms
[debug]   Load.apply: Def.make(settings)... took 611.0892ms
[debug]   Load.apply: structureIndex took 322.4893ms
[debug]   Load.apply: mkStreams took 4.713ms
[info] loading global plugins from C:\Users\cvdus\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 13655.2656ms
[debug]           Load.loadUnit: plugins took 27.243601ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\cvdus\OneDrive\Desktop\Scala\project
[debug]             Load.loadUnit: mkEval took 6.1394ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\cvdus\OneDrive\Desktop\Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3036 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 2.6999ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\cvdus\OneDrive\Desktop\Scala\project, plugins: List(<none>))) took 4.4112ms
[debug] [Loading] Done in C:\Users\cvdus\OneDrive\Desktop\Scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2090.4038ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.693799ms
[debug]         Load.loadUnit(file:/C:/Users/cvdus/OneDrive/Desktop/Scala/project/, ...) took 2122.0614ms
[debug]       Load.apply: load took 2123.493199ms
[debug]       Load.apply: resolveProjects took 0.2018ms
[debug]       Load.apply: finalTransforms took 9.9353ms
[debug]       Load.apply: config.delegates took 0.2631ms
[debug]       Load.apply: Def.make(settings)... took 71.895699ms
[debug]       Load.apply: structureIndex took 26.363001ms
[debug]       Load.apply: mkStreams took 0.003401ms
[info] loading project definition from C:\Users\cvdus\OneDrive\Desktop\Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3606.3206ms
[debug]     Load.loadUnit: defsScala took 0.003301ms
[debug] [Loading] Scanning directory C:\Users\cvdus\OneDrive\Desktop\Scala
[debug]       Load.loadUnit: mkEval took 0.3038ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6686 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 54.8607ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\cvdus\OneDrive\Desktop\Scala, plugins: List(<none>))) took 58.2307ms
[debug] [Loading] Done in C:\Users\cvdus\OneDrive\Desktop\Scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1058.427299ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.115101ms
[debug]   Load.loadUnit(file:/C:/Users/cvdus/OneDrive/Desktop/Scala/, ...) took 4671.6688ms
[debug] Load.apply: load took 4673.0361ms
[debug] Load.apply: resolveProjects took 0.0906ms
[debug] Load.apply: finalTransforms took 29.7564ms
[debug] Load.apply: config.delegates took 0.3078ms
[debug] Load.apply: Def.make(settings)... took 82.3977ms
[debug] Load.apply: structureIndex took 26.3904ms
[debug] Load.apply: mkStreams took 0.003501ms
[info] set current project to Scala (in build file:/C:/Users/cvdus/OneDrive/Desktop/Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 12213 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 12213, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala (in build file:/C:/Users/cvdus/OneDrive/Desktop/Scala/)
[debug] > Exec(idea-shell, None, None)
